@startuml
hide empty fields
hide empty methods

class DailyQueue << "ScriptableObject" >>
{
    + Person[] queue
}

class Document << "ScriptableObject" >>
{
    + documentPicture : Sprite
    + id : int
}

Class Person << "ScriptableObject" >>
{
	+ face : Sprite
	+ name : string
	+ surname : strnig
	+ birthdate : string
	+ birthplace : string
	+ country : string
	+ document : Document	
	+ arrivalDialogue : string
	+ acceptDialogue : string
	+ denyDialogue : string
}

Class Names << "ScriptableObject" >>
{
    + string[] names
    
    + GetRandomName() : string
}

Class Images << "ScriptableObject" >>
{
    + Sprite[] faces
    
    + GetImageAt() : Sprite
    + SortImages() : void
}

Class GameManager
{
    + dailyQueue : DailyQueue
    + person : PersonObj
    
    - FillList() : void
    - NextPerson() : void
    - listenSpeaking() : void
}

Class Alarm
{
    + baloonPrefab : GameObject
    - CallNextPerson() : void
    - ListenSpeaking() : void
}

Class Baloon
{
    + text : Text
    + AlarmSpeakinEnded : Action
    + LeavingSpeakEnded : Action

    + Speak() : void
    - Move() : void
}

Class DocumentObj
{
    + documentPicture : Image
    + documentId : Text
    + name : Text
    + surname : Text
    + birthDate : Text
    + birthPlace : Text
    + country : Text
    - person : Person
    
    + SetOwner() : void
    - FillDocument() : void
}

Class PersonObj
{
    + baloonPrefab : GameObject
    + documentObj : DocumentObj
    + StartTalking : Action
    - face : Image
    
    + NewPerson() : void
    - Accepted() : void
    - Denied() : void
    - Arrival() : void    
}

Class PersonGenerator
{
    {static} - Names[] maleNames
    {static} - Names[] femaleNames
    {static} - Names[] surnames
    {static} - Names[] cities
    {static} - Names[] countries
    {static} - Images[] maleFaces
    {static} - Images[] maleDocumentFaces
    {static} - Images[] femaleFaces
    {static} - Images[] femaleDocumentFaces
    
    {static} + GenerateRandomPerson() : Person
    {static} - LoadAssets() : void
    {static} - GetRandomName() : string
    {static} - SetRandomFace() : void
    {static} - GetRandomDate() : string
    {static} - GetRandomId() : int
}

GameManager ---> PersonGenerator : use
GameManager --> DailyQueue : use
GameManager --> PersonObj : refer
PersonGenerator --> Names : use
PersonGenerator --> Images : use
PersonGenerator -> Person : create
Person --> Document : use
PersonObj --> Person : use
DailyQueue --> Person : use
PersonObj --> DocumentObj : use
Alarm -> Baloon : use 
Baloon <-- PersonObj : use

@enduml